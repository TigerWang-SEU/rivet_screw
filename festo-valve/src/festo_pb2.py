# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: festo.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='festo.proto',
  package='festo',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x0b\x66\x65sto.proto\x12\x05\x66\x65sto\"\x17\n\x05Reply\x12\x0e\n\x06status\x18\x01 \x01(\t\"\x1f\n\x0cValveRequest\x12\x0f\n\x07valveNo\x18\x01 \x01(\r2v\n\x0fvalveController\x12\x30\n\topenValve\x12\x13.festo.ValveRequest\x1a\x0c.festo.Reply\"\x00\x12\x31\n\ncloseValve\x12\x13.festo.ValveRequest\x1a\x0c.festo.Reply\"\x00\x62\x06proto3')
)




_REPLY = _descriptor.Descriptor(
  name='Reply',
  full_name='festo.Reply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='festo.Reply.status', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=22,
  serialized_end=45,
)


_VALVEREQUEST = _descriptor.Descriptor(
  name='ValveRequest',
  full_name='festo.ValveRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='valveNo', full_name='festo.ValveRequest.valveNo', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=47,
  serialized_end=78,
)

DESCRIPTOR.message_types_by_name['Reply'] = _REPLY
DESCRIPTOR.message_types_by_name['ValveRequest'] = _VALVEREQUEST
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Reply = _reflection.GeneratedProtocolMessageType('Reply', (_message.Message,), dict(
  DESCRIPTOR = _REPLY,
  __module__ = 'festo_pb2'
  # @@protoc_insertion_point(class_scope:festo.Reply)
  ))
_sym_db.RegisterMessage(Reply)

ValveRequest = _reflection.GeneratedProtocolMessageType('ValveRequest', (_message.Message,), dict(
  DESCRIPTOR = _VALVEREQUEST,
  __module__ = 'festo_pb2'
  # @@protoc_insertion_point(class_scope:festo.ValveRequest)
  ))
_sym_db.RegisterMessage(ValveRequest)



_VALVECONTROLLER = _descriptor.ServiceDescriptor(
  name='valveController',
  full_name='festo.valveController',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=80,
  serialized_end=198,
  methods=[
  _descriptor.MethodDescriptor(
    name='openValve',
    full_name='festo.valveController.openValve',
    index=0,
    containing_service=None,
    input_type=_VALVEREQUEST,
    output_type=_REPLY,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='closeValve',
    full_name='festo.valveController.closeValve',
    index=1,
    containing_service=None,
    input_type=_VALVEREQUEST,
    output_type=_REPLY,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_VALVECONTROLLER)

DESCRIPTOR.services_by_name['valveController'] = _VALVECONTROLLER

# @@protoc_insertion_point(module_scope)
