# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: led_connector.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='led_connector.proto',
  package='',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x13led_connector.proto\",\n\x08LEDState\x12\r\n\x05\x63olor\x18\x01 \x01(\t\x12\x11\n\tfrequency\x18\x02 \x01(\x02\"7\n\tLEDConfig\x12\n\n\x02ip\x18\x01 \x01(\t\x12\x0b\n\x03mac\x18\x02 \x01(\t\x12\x11\n\tled_count\x18\x03 \x01(\r\"\x07\n\x05\x45mpty2\xa6\x02\n\x11LEDStateIndicator\x12 \n\x0bsetLEDState\x12\t.LEDState\x1a\x06.Empty\x12 \n\x0bsetLEDColor\x12\t.LEDState\x1a\x06.Empty\x12)\n\x14setLEDBlinkFrequency\x12\t.LEDState\x1a\x06.Empty\x12\"\n\x0csetLEDConfig\x12\n.LEDConfig\x1a\x06.Empty\x12!\n\x0bsetLEDCount\x12\n.LEDConfig\x1a\x06.Empty\x12\x1e\n\x08setLEDIp\x12\n.LEDConfig\x1a\x06.Empty\x12\x1f\n\tsetLEDMac\x12\n.LEDConfig\x1a\x06.Empty\x12\x1a\n\x08resetLED\x12\x06.Empty\x1a\x06.Emptyb\x06proto3')
)




_LEDSTATE = _descriptor.Descriptor(
  name='LEDState',
  full_name='LEDState',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='color', full_name='LEDState.color', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='frequency', full_name='LEDState.frequency', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=23,
  serialized_end=67,
)


_LEDCONFIG = _descriptor.Descriptor(
  name='LEDConfig',
  full_name='LEDConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ip', full_name='LEDConfig.ip', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='mac', full_name='LEDConfig.mac', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='led_count', full_name='LEDConfig.led_count', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=69,
  serialized_end=124,
)


_EMPTY = _descriptor.Descriptor(
  name='Empty',
  full_name='Empty',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=126,
  serialized_end=133,
)

DESCRIPTOR.message_types_by_name['LEDState'] = _LEDSTATE
DESCRIPTOR.message_types_by_name['LEDConfig'] = _LEDCONFIG
DESCRIPTOR.message_types_by_name['Empty'] = _EMPTY
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

LEDState = _reflection.GeneratedProtocolMessageType('LEDState', (_message.Message,), dict(
  DESCRIPTOR = _LEDSTATE,
  __module__ = 'led_connector_pb2'
  # @@protoc_insertion_point(class_scope:LEDState)
  ))
_sym_db.RegisterMessage(LEDState)

LEDConfig = _reflection.GeneratedProtocolMessageType('LEDConfig', (_message.Message,), dict(
  DESCRIPTOR = _LEDCONFIG,
  __module__ = 'led_connector_pb2'
  # @@protoc_insertion_point(class_scope:LEDConfig)
  ))
_sym_db.RegisterMessage(LEDConfig)

Empty = _reflection.GeneratedProtocolMessageType('Empty', (_message.Message,), dict(
  DESCRIPTOR = _EMPTY,
  __module__ = 'led_connector_pb2'
  # @@protoc_insertion_point(class_scope:Empty)
  ))
_sym_db.RegisterMessage(Empty)



_LEDSTATEINDICATOR = _descriptor.ServiceDescriptor(
  name='LEDStateIndicator',
  full_name='LEDStateIndicator',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=136,
  serialized_end=430,
  methods=[
  _descriptor.MethodDescriptor(
    name='setLEDState',
    full_name='LEDStateIndicator.setLEDState',
    index=0,
    containing_service=None,
    input_type=_LEDSTATE,
    output_type=_EMPTY,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='setLEDColor',
    full_name='LEDStateIndicator.setLEDColor',
    index=1,
    containing_service=None,
    input_type=_LEDSTATE,
    output_type=_EMPTY,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='setLEDBlinkFrequency',
    full_name='LEDStateIndicator.setLEDBlinkFrequency',
    index=2,
    containing_service=None,
    input_type=_LEDSTATE,
    output_type=_EMPTY,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='setLEDConfig',
    full_name='LEDStateIndicator.setLEDConfig',
    index=3,
    containing_service=None,
    input_type=_LEDCONFIG,
    output_type=_EMPTY,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='setLEDCount',
    full_name='LEDStateIndicator.setLEDCount',
    index=4,
    containing_service=None,
    input_type=_LEDCONFIG,
    output_type=_EMPTY,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='setLEDIp',
    full_name='LEDStateIndicator.setLEDIp',
    index=5,
    containing_service=None,
    input_type=_LEDCONFIG,
    output_type=_EMPTY,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='setLEDMac',
    full_name='LEDStateIndicator.setLEDMac',
    index=6,
    containing_service=None,
    input_type=_LEDCONFIG,
    output_type=_EMPTY,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='resetLED',
    full_name='LEDStateIndicator.resetLED',
    index=7,
    containing_service=None,
    input_type=_EMPTY,
    output_type=_EMPTY,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_LEDSTATEINDICATOR)

DESCRIPTOR.services_by_name['LEDStateIndicator'] = _LEDSTATEINDICATOR

# @@protoc_insertion_point(module_scope)
