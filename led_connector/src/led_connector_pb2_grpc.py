# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import led_connector_pb2 as led__connector__pb2


class LEDStateIndicatorStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.setLEDState = channel.unary_unary(
        '/LEDStateIndicator/setLEDState',
        request_serializer=led__connector__pb2.LEDState.SerializeToString,
        response_deserializer=led__connector__pb2.Empty.FromString,
        )
    self.setLEDConfig = channel.unary_unary(
        '/LEDStateIndicator/setLEDConfig',
        request_serializer=led__connector__pb2.LEDConfig.SerializeToString,
        response_deserializer=led__connector__pb2.Empty.FromString,
        )
    self.resetLED = channel.unary_unary(
        '/LEDStateIndicator/resetLED',
        request_serializer=led__connector__pb2.Empty.SerializeToString,
        response_deserializer=led__connector__pb2.Empty.FromString,
        )


class LEDStateIndicatorServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def setLEDState(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def setLEDConfig(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def resetLED(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_LEDStateIndicatorServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'setLEDState': grpc.unary_unary_rpc_method_handler(
          servicer.setLEDState,
          request_deserializer=led__connector__pb2.LEDState.FromString,
          response_serializer=led__connector__pb2.Empty.SerializeToString,
      ),
      'setLEDConfig': grpc.unary_unary_rpc_method_handler(
          servicer.setLEDConfig,
          request_deserializer=led__connector__pb2.LEDConfig.FromString,
          response_serializer=led__connector__pb2.Empty.SerializeToString,
      ),
      'resetLED': grpc.unary_unary_rpc_method_handler(
          servicer.resetLED,
          request_deserializer=led__connector__pb2.Empty.FromString,
          response_serializer=led__connector__pb2.Empty.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'LEDStateIndicator', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
